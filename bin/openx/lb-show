#!/usr/bin/perl

use warnings;
use strict;
use DBI;
use Data::Dumper;

# config
my $mypw = 'REDACTED';

# data ceners
my %dc = (
	'ee' => "Amazon US East 1 - Virginia",
	'es' => "Amazon AP Southeast 1 - Singapore",
	'ew' => "Amazon US West 1 - San Jose",
	'ez' => "Amazon EU West 1 - Dublin",
	'iw' => "Physicals - IX2 Los Angeles",
	'op' => "Physicals - OpenX Pasadena",
	'xa' => "Physicals - Amsterdam",
	'xv' => "Physicals - Virginia",
);

# connect to MySQL
my $dbh = DBI->connect('dbi:mysql:lbstats','root',$mypw) or die "couldn't connect to mysql:lbstats: " . $DBI::errstr;

# pull datacenter and internal
my (%hostdc,%internal,%hostrole);
my $sql = "select hostname,datacenter,internal,role from hosts";
my $sth = $dbh->prepare($sql) or die "prepare($sql): $DBI::errstr";
$sth->execute() or die "prepare($sql): $DBI::errstr";
while (my $row = $sth->fetchrow_hashref()) {
	my $hostname = $row->{hostname};
	my $datacenter = $row->{datacenter};
	my $internal = $row->{internal};
	my $role = $row->{role};
	$hostdc{$hostname} = $datacenter;
	$hostrole{$hostname} = $role;
	$internal{$hostname} = $internal;
}

# pull hourly stats
$sql = "select hostname,date_format(logwhen,'%Y-%m-%d %H00') as thehour,max(bw) as maxbw
		from stats10
		where logwhen > date_sub(now(), interval 7 day)
		group by hostname,thehour";
$sth = $dbh->prepare($sql) or die "prepare($sql): $DBI::errstr";
$sth->execute() or die "prepare($sql): $DBI::errstr";

my %dcbw; # datacenter bandwidth
my %rolebw; # datacenter bandwidth
while (my $row = $sth->fetchrow_hashref()) {
	my $hostname = $row->{hostname};
	my $thehour = $row->{thehour};
	my $maxbw = $row->{maxbw};
	my $dc = $hostdc{$hostname};
	my $role = $hostrole{$hostname};
	warn "no role for $hostname" unless defined $role;
	#warn $hostname if $internal{$hostname};
	next if $internal{$hostname};
	$dcbw{$dc}->{$thehour} += $maxbw;
	$rolebw{$dc}->{$role}->{$thehour} += $maxbw;
}

print "From: black-reports\@openx.org\n";
print "To: black-reports\@openx.org\n";
#print "To: chris.hicks\@openx.org\n";
print "Subject: daily load balancer bandwidth statistics\n";
print "Content-Type: text/html; charset=\"us-ascii\"\n";
print "\n";
print "<html>\n";
print "<body>\n";
print "<h1>daily load balancer bandwidth statistics</h1>\n";
print "<P>hourly, for the last week</p>\n";

foreach my $dc (sort keys %dcbw) {
	print "<H2>", uc $dc, " - ", $dc{$dc} ,"</h2>\n";
	print "\n";
	#print '~' x 98, "\n";
	print "<PRE>\n";
	printf("<B>%-2s %-15s %-16s %-13s %-14s %-14s %-14s</b>\n",'DC','Day/Hour','bytes/sec','megabytes/sec','megabits/sec','hosted mbps','market mbps');
	printf("%-2s %-15s %-16s %-13s %-14s %-14s %-14s\n",'--','-'x15,'-'x16,'-'x13,'-'x14,'-'x14,'-'x14);
	my $dcref = $dcbw{$dc};
	my $roleref = $rolebw{$dc};
	foreach my $hour (sort keys %$dcref) {
		my $bw = $dcref->{$hour};
		my $mbw = $bw/1024/1024;
		my $mbps = 8*$bw/1024/1024;
		my $hosted_bw = $roleref->{'hosted'}->{$hour} || 0;
		my $hosted_mbps = 8*$hosted_bw/1024/1024;
		my $market_bw = $roleref->{'market'}->{$hour} || 0;
		my $market_mbps = 8*$market_bw/1024/1024;
		printf("%2s %15s %12d Bps %8.1f MBps %9.1f Mbps %9.1f Mbps %9.1f Mbps\n",$dc,$hour,$bw,$mbw,$mbps,$hosted_mbps,$market_mbps);
	}
	print '=' x 98, "\n";
	print "\n";
	print "</PRE>\n";
}

print "</body>\n";
print "</html>\n";
